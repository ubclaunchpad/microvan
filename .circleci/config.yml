# This config was automatically generated from your source code
# Stacks detected: deps:node:frontend,deps:python:backend,file:manage.py:backend,package_manager:pipenv:backend,test:tox:backend
version: 2.1
orbs:
  node: circleci/node@5
  python: circleci/python@2
jobs:
      

  test-node:
    # Install node dependencies and run tests
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: Run tests
          command: npm test --passWithNoTests
  build-node:
    # Build node project
    executor: node/default
    working_directory: ~/project/frontend
    steps:
      - checkout:
          path: ~/project
      - node/install-packages:
          pkg-manager: npm
      - run:
          command: npm run build
      - run:
          name: Create the ~/artifacts directory if it doesn't exist
          command: mkdir -p ~/artifacts
      # Copy output to artifacts dir
      - run:
          name: Copy artifacts
          command: cp -R build dist public .output .next .docusaurus ~/artifacts 2>/dev/null || true
      - store_artifacts:
          path: ~/artifacts
          destination: node-build
  test-python:
    # Install dependencies and run tests
    docker:
      - image: cimg/python:3.10-node
    working_directory: ~/project/backend
    steps:
      - checkout:
          path: ~/project
      - python/install-packages:
          args: --dev
          pkg-manager: pipenv
      - run:
          name: Run tests
          command: pipenv run python manage.py test
          environment:
            SECRET_KEY: $DJANGO_SECRET
            AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
            AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY
            AWS_STORAGE_BUCKET_NAME: $AWS_STORAGE_BUCKET_NAME
            AWS_S3_REGION_NAME: $AWS_S3_REGION_NAME
            COGNITO_USER_POOL_ID: $COGNITO_USER_POOL_ID
            COGNITO_APP_CLIENT_ID: $COGNITO_APP_CLIENT_ID
            COGNITO_APP_CLIENT_SECRET: $COGNITO_APP_CLIENT_SECRET
  deploy:
    # This is an example deploy job, not actually used by the workflow
    docker:
      - image: cimg/base:stable
    steps:
      # Replace this with steps to deploy to users
      - run:
          name: deploy
          command: '#e.g. ./deploy.sh'
      - run:
          name: found github actions config
          command: ':'
workflows:
  build-and-test:
    jobs:
      - test-node
      - build-node:
          requires:
            - test-node
            - test-python
      - test-python
    # - deploy:
    #     requires:
    #       - build-node
